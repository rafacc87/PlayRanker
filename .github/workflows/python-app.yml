# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PlayRanker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: lint with flake8
      run: |
        # stop the build if there are python syntax errors or undefined names
        flake8 . --count --select=e9,f63,f7,f82 --show-source --statistics
        # exit-zero treats all errors as warnings. the github editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
      # run: |
        # pytest
    - name: Build executable
      run: |
        pyinstaller --onefile app.py
    - name: Get version number
      id: get_version
      run: echo "version=v1.0.$(git rev-list --count HEAD)" >> $GITHUB_ENV
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ env.version }}
        release_name: Release ${{ env.version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/app
        asset_name: PlayRanker-${{ env.version }}
        asset_content_type: application/octet-stream
